#! /bin/sh

set -ex

srcdir="$(dirname "$0")"
test -z "$srcdir" && srcdir=.

cd "$srcdir"

clone_repo_commit() {
    if test -d "$2/.git"; then
        git -C "$2" reset --hard
        git -C "$2" clean -fd
        if ! git -C "$2" checkout $3; then
            rm -rf "$2"
        fi
    else
        if test -d "$2"; then
            set +x
            echo "error: '$2' is not a Git repository"
            exit 1
        fi
    fi
    if ! test -d "$2"; then
        git clone $1 "$2"
        if ! git -C "$2" checkout $3; then
            rm -rf "$2"
            exit 1
        fi
    fi
}

download_by_hash() {
    DOWNLOAD_COMMAND="curl -Lo"
    if ! command -v $DOWNLOAD_COMMAND >/dev/null 2>&1; then
        DOWNLOAD_COMMAND="wget -O"
        if ! command -v $DOWNLOAD_COMMAND >/dev/null 2>&1; then
            set +x
            echo "error: Neither curl nor wget found"
            exit 1
        fi
    fi
    SHA256_COMMAND="sha256sum"
    if ! command -v $SHA256_COMMAND >/dev/null 2>&1; then
        SHA256_COMMAND="sha256"
        if ! command -v $SHA256_COMMAND >/dev/null 2>&1; then
            set +x
            echo "error: Cannot find sha256(sum) command"
            exit 1
        fi
    fi
    if ! test -f "$2" || ! $SHA256_COMMAND "$2" | grep $3 >/dev/null 2>&1; then
        rm -f "$2"
        mkdir -p "$2" && rm -rf "$2"
        $DOWNLOAD_COMMAND "$2" $1
        if ! $SHA256_COMMAND "$2" | grep $3 >/dev/null 2>&1; then
            set +x
            echo "error: Cannot download file '$2' by hash"
            echo "incorrect hash:"
            $SHA256_COMMAND "$2"
            rm -f "$2"
            exit 1
        fi
    fi
}

clone_repo_commit \
    https://github.com/osdev0/freestnd-c-hdrs-0bsd.git \
    freestnd-c-hdrs-0bsd \
    0353851fdebe0eb6a4d2c608c5393040d310bf35

clone_repo_commit \
    https://github.com/osdev0/cc-runtime.git \
    cc-runtime \
    9c281448fe40498a6341d74f55c9af4f642c0b1d

download_by_hash \
    https://github.com/limine-bootloader/limine/raw/7cddb61183685d9bddd2eb13d42223d929c2abe6/limine.h \
    src/limine.h \
    c00e7d4cd6e2674eca481f978b64a7fb8c8479cc32c466ec35aad2207761bf01

clone_repo_commit \
    https://github.com/mintsuki/flanterm.git \
    src/flanterm \
    a6f6edd6631c01caab932a59dce97bbd5f0c72c8

clone_repo_commit \
    https://github.com/UltraOS/uACPI.git \
    uACPI \
    c0a82c02d90269625f9ba383aab9720163c1fa90
rm -rf src/uacpi
mkdir -p src/uacpi
cp -rp uACPI/include/uacpi/* src/uacpi/
cp -rp uACPI/source/* src/uacpi/

download_by_hash \
    https://github.com/charlesnicholson/nanoprintf/raw/5017d7bd0dc7210ea0c5f2fd8332eca9f222790d/nanoprintf.h \
    src/lib/nanoprintf_orig.h \
    77c52b1d79169c2bfb087d6bdfb4ae1604be003e85f9714fe31f6b8f88734d1c
sed '/NPF_WRITEBACK(LONG_DOUBLE/d' src/lib/nanoprintf_orig.h >src/lib/nanoprintf.h

rm -rf mlibc-headers
rm -rf mlibc/build
clone_repo_commit \
    https://github.com/managarm/mlibc.git \
    mlibc \
    c906cb5ade774bb43135054ba75530c15ddc94d8

# XXX remove once upstreamed
( cd mlibc && patch -p1 < ../../patches/mlibc/jinx-working-patch.patch )

mkdir -p mlibc/build
cd mlibc/build
meson setup \
    --cross-file ../../cross_file.txt \
    --prefix=/ \
    -Dheaders_only=true \
    ..
ninja
mkdir ../../mlibc-headers
DESTDIR="$(cd ../../mlibc-headers && pwd -P)" ninja install
cd ../..
